name: Quantum Secure Chat CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.11'

    - name: Install System Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libomp-dev

    - name: Install Dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt
        pip install qiskit-aer pytest  # pytest is installed inside venv

    - name: Run Tests
      run: |
        source venv/bin/activate
        export PYTHONPATH=$PYTHONPATH:$(pwd)  # project root to Python path
        if [ -d "tests" ] && [ "$(ls -A tests)" ]; then
          pytest tests/
        else
          echo "No tests found. Skipping..."
        fi

    - name: Security Audit
      run: |
        pip install safety
        safety check --full-report

    - name: Format Python Code
      run: |
        pip install black
        black --check .

    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      run: |
        mkdir -p docs
        echo "<h1>Quantum Secure Chat</h1><p>This is a GitHub Pages deployment for the project.</p>" > docs/index.html
        git config --global user.email "github-actions@github.com"
        git config --global user.name "github-actions"
        git add docs/
        git commit -m "Deploy to GitHub Pages"
        git push origin main

    - name: Notify Slack on Failure
      if: failure()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_MESSAGE: "ðŸš¨ Build Failed! Fix Required!"

    - name: Create GitHub Release
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref }}
        name: Release ${{ github.ref }}
        draft: false
        prerelease: false
